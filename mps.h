//This program is free software: you can redistribute it and/or modify
//it under the terms of the GNU Lesser General Public License as published by
//the Free Software Foundation, either version 3 of the License, or
//(at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU Lesser General Public License for more details.
//
//You should have received a copy of the GNU Lesser General Public License
//along with this program.  If not, see <http://www.gnu.org/licenses/>.

#ifndef MPS
#define MPS

#include <gmp.h>
#include <mpfr.h>

//Version stuff.

#define MPS_VERSION_MAJOR 0
#define MPS_VERSION_MINOR 1
#define MPS_VERSION_PATCHLEVEL 0
#define MPS_VERSION_STRING "0.1"

#define MPS_VERSION_NUM(a,b,c) (((a) << 16L) | ((b) << 8) | (c))
#define MPS_VERSION                                                     \
  MPS_VERSION_NUM(MPS_VERSION_MAJOR,MPS_VERSION_MINOR,MPS_VERSION_PATCHLEVEL)

//Basic type definitions.

typedef struct
{
	mpfr_t re;
	mpfr_t i;
	mpfr_t j;
	mpfr_t k;
} __mps_quater;

typedef __mps_quater mps_quater

typedef int mps_rndq_t;

//Lots and lots of fricking rounding macros. Hurts my brain.

#define RNDQ(r1,r2,r3,r4) (((int)(r1)) + ((int)(r2) << 4) + ((int)(r3) << 8) + ((int)(r4) << 12))
#define MPS_RNDQ_RE(x) ((mpfr_rnd_t)((x) & 0x0F))
#define MPS_RNDQ_I(x) ((mpfr_rnd_t)((x) >> 4))
#define MPS_RNDQ_J(x) ((mpfr_rnd_t)((x) >> 8))
#define MPS_RNDQ_K(x) ((mpfr_rnd_t)((x) >> 12))

#define MPS_RNDNNNN RNDQ(GMP_RNDN,GMP_RNDN,GMP_RNDN,GMP_RNDN)
#define MPS_RNDNNNZ RNDQ(GMP_RNDN,GMP_RNDN,GMP_RNDN,GMP_RNDZ)
#define MPS_RNDNNNU RNDQ(GMP_RNDN,GMP_RNDN,GMP_RNDN,GMP_RNDU)
#define MPS_RNDNNND RNDQ(GMP_RNDN,GMP_RNDN,GMP_RNDN,GMP_RNDD)

#define MPS_RNDNNZN RNDQ(GMP_RNDN,GMP_RNDN,GMP_RNDZ,GMP_RNDN)
#define MPS_RNDNNZZ RNDQ(GMP_RNDN,GMP_RNDN,GMP_RNDZ,GMP_RNDZ)
#define MPS_RNDNNZU RNDQ(GMP_RNDN,GMP_RNDN,GMP_RNDZ,GMP_RNDU)
#define MPS_RNDNNZD RNDQ(GMP_RNDN,GMP_RNDN,GMP_RNDZ,GMP_RNDD)

#define MPS_RNDNNUN RNDQ(GMP_RNDN,GMP_RNDN,GMP_RNDU,GMP_RNDN)
#define MPS_RNDNNUZ RNDQ(GMP_RNDN,GMP_RNDN,GMP_RNDU,GMP_RNDZ)
#define MPS_RNDNNUU RNDQ(GMP_RNDN,GMP_RNDN,GMP_RNDU,GMP_RNDU)
#define MPS_RNDNNUD RNDQ(GMP_RNDN,GMP_RNDN,GMP_RNDU,GMP_RNDD)

#define MPS_RNDNNDN RNDQ(GMP_RNDN,GMP_RNDN,GMP_RNDD,GMP_RNDN)
#define MPS_RNDNNDZ RNDQ(GMP_RNDN,GMP_RNDN,GMP_RNDD,GMP_RNDZ)
#define MPS_RNDNNDU RNDQ(GMP_RNDN,GMP_RNDN,GMP_RNDD,GMP_RNDU)
#define MPS_RNDNNDD RNDQ(GMP_RNDN,GMP_RNDN,GMP_RNDD,GMP_RNDD)

#define MPS_RNDNZNN RNDQ(GMP_RNDN,GMP_RNDZ,GMP_RNDN,GMP_RNDN)
#define MPS_RNDNZNZ RNDQ(GMP_RNDN,GMP_RNDZ,GMP_RNDN,GMP_RNDZ)
#define MPS_RNDNZNU RNDQ(GMP_RNDN,GMP_RNDZ,GMP_RNDN,GMP_RNDU)
#define MPS_RNDNZND RNDQ(GMP_RNDN,GMP_RNDZ,GMP_RNDN,GMP_RNDD)

#define MPS_RNDNZZN RNDQ(GMP_RNDN,GMP_RNDZ,GMP_RNDZ,GMP_RNDN)
#define MPS_RNDNZZZ RNDQ(GMP_RNDN,GMP_RNDZ,GMP_RNDZ,GMP_RNDZ)
#define MPS_RNDNZZU RNDQ(GMP_RNDN,GMP_RNDZ,GMP_RNDZ,GMP_RNDU)
#define MPS_RNDNZZD RNDQ(GMP_RNDN,GMP_RNDZ,GMP_RNDZ,GMP_RNDD)

#define MPS_RNDNZUN RNDQ(GMP_RNDN,GMP_RNDZ,GMP_RNDU,GMP_RNDN)
#define MPS_RNDNZUZ RNDQ(GMP_RNDN,GMP_RNDZ,GMP_RNDU,GMP_RNDZ)
#define MPS_RNDNZUU RNDQ(GMP_RNDN,GMP_RNDZ,GMP_RNDU,GMP_RNDU)
#define MPS_RNDNZUD RNDQ(GMP_RNDN,GMP_RNDZ,GMP_RNDU,GMP_RNDD)

#define MPS_RNDNZDN RNDQ(GMP_RNDN,GMP_RNDZ,GMP_RNDD,GMP_RNDN)
#define MPS_RNDNZDZ RNDQ(GMP_RNDN,GMP_RNDZ,GMP_RNDD,GMP_RNDZ)
#define MPS_RNDNZDU RNDQ(GMP_RNDN,GMP_RNDZ,GMP_RNDD,GMP_RNDU)
#define MPS_RNDNZDD RNDQ(GMP_RNDN,GMP_RNDZ,GMP_RNDD,GMP_RNDD)

#define MPS_RNDNUNN RNDQ(GMP_RNDN,GMP_RNDU,GMP_RNDN,GMP_RNDN)
#define MPS_RNDNUNZ RNDQ(GMP_RNDN,GMP_RNDU,GMP_RNDN,GMP_RNDZ)
#define MPS_RNDNUNU RNDQ(GMP_RNDN,GMP_RNDU,GMP_RNDN,GMP_RNDU)
#define MPS_RNDNUND RNDQ(GMP_RNDN,GMP_RNDU,GMP_RNDN,GMP_RNDD)

#define MPS_RNDNUZN RNDQ(GMP_RNDN,GMP_RNDU,GMP_RNDZ,GMP_RNDN)
#define MPS_RNDNUZZ RNDQ(GMP_RNDN,GMP_RNDU,GMP_RNDZ,GMP_RNDZ)
#define MPS_RNDNUZU RNDQ(GMP_RNDN,GMP_RNDU,GMP_RNDZ,GMP_RNDU)
#define MPS_RNDNUZD RNDQ(GMP_RNDN,GMP_RNDU,GMP_RNDZ,GMP_RNDD)

#define MPS_RNDNUUN RNDQ(GMP_RNDN,GMP_RNDU,GMP_RNDU,GMP_RNDN)
#define MPS_RNDNUUZ RNDQ(GMP_RNDN,GMP_RNDU,GMP_RNDU,GMP_RNDZ)
#define MPS_RNDNUUU RNDQ(GMP_RNDN,GMP_RNDU,GMP_RNDU,GMP_RNDU)
#define MPS_RNDNUUD RNDQ(GMP_RNDN,GMP_RNDU,GMP_RNDU,GMP_RNDD)

#define MPS_RNDNUDN RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDD,GMP_RNDN)
#define MPS_RNDNUDZ RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDD,GMP_RNDZ)
#define MPS_RNDNUDU RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDD,GMP_RNDU)
#define MPS_RNDNUDD RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDD,GMP_RNDD)

#define MPS_RNDNDNN RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDN,GMP_RNDN)
#define MPS_RNDNDNZ RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDN,GMP_RNDZ)
#define MPS_RNDNDNU RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDN,GMP_RNDU)
#define MPS_RNDNDND RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDN,GMP_RNDD)

#define MPS_RNDNDZN RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDZ,GMP_RNDN)
#define MPS_RNDNDZZ RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDZ,GMP_RNDZ)
#define MPS_RNDNDZU RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDZ,GMP_RNDU)
#define MPS_RNDNDZD RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDZ,GMP_RNDD)

#define MPS_RNDNDUN RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDU,GMP_RNDN)
#define MPS_RNDNDUZ RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDU,GMP_RNDZ)
#define MPS_RNDNDUU RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDU,GMP_RNDU)
#define MPS_RNDNDUD RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDU,GMP_RNDD)

#define MPS_RNDNDDN RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDD,GMP_RNDN)
#define MPS_RNDNDDZ RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDD,GMP_RNDZ)
#define MPS_RNDNDDU RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDD,GMP_RNDU)
#define MPS_RNDNDDD RNDQ(GMP_RNDN,GMP_RNDD,GMP_RNDD,GMP_RNDD)

#define MPS_RNDZNNN RNDQ(GMP_RNDZ,GMP_RNDN,GMP_RNDN,GMP_RNDN)
#define MPS_RNDZNNZ RNDQ(GMP_RNDZ,GMP_RNDN,GMP_RNDN,GMP_RNDZ)
#define MPS_RNDZNNU RNDQ(GMP_RNDZ,GMP_RNDN,GMP_RNDN,GMP_RNDU)
#define MPS_RNDZNND RNDQ(GMP_RNDZ,GMP_RNDN,GMP_RNDN,GMP_RNDD)

#define MPS_RNDZNZN RNDQ(GMP_RNDZ,GMP_RNDN,GMP_RNDZ,GMP_RNDN)
#define MPS_RNDZNZZ RNDQ(GMP_RNDZ,GMP_RNDN,GMP_RNDZ,GMP_RNDZ)
#define MPS_RNDZNZU RNDQ(GMP_RNDZ,GMP_RNDN,GMP_RNDZ,GMP_RNDU)
#define MPS_RNDZNZD RNDQ(GMP_RNDZ,GMP_RNDN,GMP_RNDZ,GMP_RNDD)

#define MPS_RNDZNUN RNDQ(GMP_RNDZ,GMP_RNDN,GMP_RNDU,GMP_RNDN)
#define MPS_RNDZNUZ RNDQ(GMP_RNDZ,GMP_RNDN,GMP_RNDU,GMP_RNDZ)
#define MPS_RNDZNUU RNDQ(GMP_RNDZ,GMP_RNDN,GMP_RNDU,GMP_RNDU)
#define MPS_RNDZNUD RNDQ(GMP_RNDZ,GMP_RNDN,GMP_RNDU,GMP_RNDD)

#define MPS_RNDZNDN RNDQ(GMP_RNDZ,GMP_RNDN,GMP_RNDD,GMP_RNDN)
#define MPS_RNDZNDZ RNDQ(GMP_RNDZ,GMP_RNDN,GMP_RNDD,GMP_RNDZ)
#define MPS_RNDZNDU RNDQ(GMP_RNDZ,GMP_RNDN,GMP_RNDD,GMP_RNDU)
#define MPS_RNDZNDD RNDQ(GMP_RNDZ,GMP_RNDN,GMP_RNDD,GMP_RNDD)

#define MPS_RNDZZNN RNDQ(GMP_RNDZ,GMP_RNDZ,GMP_RNDN,GMP_RNDN)
#define MPS_RNDZZNZ RNDQ(GMP_RNDZ,GMP_RNDZ,GMP_RNDN,GMP_RNDZ)
#define MPS_RNDZZNU RNDQ(GMP_RNDZ,GMP_RNDZ,GMP_RNDN,GMP_RNDU)
#define MPS_RNDZZND RNDQ(GMP_RNDZ,GMP_RNDZ,GMP_RNDN,GMP_RNDD)

#define MPS_RNDZZZN RNDQ(GMP_RNDZ,GMP_RNDZ,GMP_RNDZ,GMP_RNDN)
#define MPS_RNDZZZZ RNDQ(GMP_RNDZ,GMP_RNDZ,GMP_RNDZ,GMP_RNDZ)
#define MPS_RNDZZZU RNDQ(GMP_RNDZ,GMP_RNDZ,GMP_RNDZ,GMP_RNDU)
#define MPS_RNDZZZD RNDQ(GMP_RNDZ,GMP_RNDZ,GMP_RNDZ,GMP_RNDD)

#define MPS_RNDZZUN RNDQ(GMP_RNDZ,GMP_RNDZ,GMP_RNDU,GMP_RNDN)
#define MPS_RNDZZUZ RNDQ(GMP_RNDZ,GMP_RNDZ,GMP_RNDU,GMP_RNDZ)
#define MPS_RNDZZUU RNDQ(GMP_RNDZ,GMP_RNDZ,GMP_RNDU,GMP_RNDU)
#define MPS_RNDZZUD RNDQ(GMP_RNDZ,GMP_RNDZ,GMP_RNDU,GMP_RNDD)

#define MPS_RNDZZDN RNDQ(GMP_RNDZ,GMP_RNDZ,GMP_RNDD,GMP_RNDN)
#define MPS_RNDZZDZ RNDQ(GMP_RNDZ,GMP_RNDZ,GMP_RNDD,GMP_RNDZ)
#define MPS_RNDZZDU RNDQ(GMP_RNDZ,GMP_RNDZ,GMP_RNDD,GMP_RNDU)
#define MPS_RNDZZDD RNDQ(GMP_RNDZ,GMP_RNDZ,GMP_RNDD,GMP_RNDD)

#define MPS_RNDZUNN RNDQ(GMP_RNDZ,GMP_RNDU,GMP_RNDN,GMP_RNDN)
#define MPS_RNDZUNZ RNDQ(GMP_RNDZ,GMP_RNDU,GMP_RNDN,GMP_RNDZ)
#define MPS_RNDZUNU RNDQ(GMP_RNDZ,GMP_RNDU,GMP_RNDN,GMP_RNDU)
#define MPS_RNDZUND RNDQ(GMP_RNDZ,GMP_RNDU,GMP_RNDN,GMP_RNDD)

#define MPS_RNDZUZN RNDQ(GMP_RNDZ,GMP_RNDU,GMP_RNDZ,GMP_RNDN)
#define MPS_RNDZUZZ RNDQ(GMP_RNDZ,GMP_RNDU,GMP_RNDZ,GMP_RNDZ)
#define MPS_RNDZUZU RNDQ(GMP_RNDZ,GMP_RNDU,GMP_RNDZ,GMP_RNDU)
#define MPS_RNDZUZD RNDQ(GMP_RNDZ,GMP_RNDU,GMP_RNDZ,GMP_RNDD)

#define MPS_RNDZUUN RNDQ(GMP_RNDZ,GMP_RNDU,GMP_RNDU,GMP_RNDN)
#define MPS_RNDZUUZ RNDQ(GMP_RNDZ,GMP_RNDU,GMP_RNDU,GMP_RNDZ)
#define MPS_RNDZUUU RNDQ(GMP_RNDZ,GMP_RNDU,GMP_RNDU,GMP_RNDU)
#define MPS_RNDZUUD RNDQ(GMP_RNDZ,GMP_RNDU,GMP_RNDU,GMP_RNDD)

#define MPS_RNDZUDN RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDD,GMP_RNDN)
#define MPS_RNDZUDZ RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDD,GMP_RNDZ)
#define MPS_RNDZUDU RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDD,GMP_RNDU)
#define MPS_RNDZUDD RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDD,GMP_RNDD)

#define MPS_RNDZDNN RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDN,GMP_RNDN)
#define MPS_RNDZDNZ RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDN,GMP_RNDZ)
#define MPS_RNDZDNU RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDN,GMP_RNDU)
#define MPS_RNDZDND RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDN,GMP_RNDD)

#define MPS_RNDZDZN RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDZ,GMP_RNDN)
#define MPS_RNDZDZZ RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDZ,GMP_RNDZ)
#define MPS_RNDZDZU RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDZ,GMP_RNDU)
#define MPS_RNDZDZD RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDZ,GMP_RNDD)

#define MPS_RNDZDUN RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDU,GMP_RNDN)
#define MPS_RNDZDUZ RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDU,GMP_RNDZ)
#define MPS_RNDZDUU RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDU,GMP_RNDU)
#define MPS_RNDZDUD RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDU,GMP_RNDD)

#define MPS_RNDZDDN RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDD,GMP_RNDN)
#define MPS_RNDZDDZ RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDD,GMP_RNDZ)
#define MPS_RNDZDDU RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDD,GMP_RNDU)
#define MPS_RNDZDDD RNDQ(GMP_RNDZ,GMP_RNDD,GMP_RNDD,GMP_RNDD)

#define MPS_RNDUNNN RNDQ(GMP_RNDU,GMP_RNDN,GMP_RNDN,GMP_RNDN)
#define MPS_RNDUNNZ RNDQ(GMP_RNDU,GMP_RNDN,GMP_RNDN,GMP_RNDZ)
#define MPS_RNDUNNU RNDQ(GMP_RNDU,GMP_RNDN,GMP_RNDN,GMP_RNDU)
#define MPS_RNDUNND RNDQ(GMP_RNDU,GMP_RNDN,GMP_RNDN,GMP_RNDD)

#define MPS_RNDUNZN RNDQ(GMP_RNDU,GMP_RNDN,GMP_RNDZ,GMP_RNDN)
#define MPS_RNDUNZZ RNDQ(GMP_RNDU,GMP_RNDN,GMP_RNDZ,GMP_RNDZ)
#define MPS_RNDUNZU RNDQ(GMP_RNDU,GMP_RNDN,GMP_RNDZ,GMP_RNDU)
#define MPS_RNDUNZD RNDQ(GMP_RNDU,GMP_RNDN,GMP_RNDZ,GMP_RNDD)

#define MPS_RNDUNUN RNDQ(GMP_RNDU,GMP_RNDN,GMP_RNDU,GMP_RNDN)
#define MPS_RNDUNUZ RNDQ(GMP_RNDU,GMP_RNDN,GMP_RNDU,GMP_RNDZ)
#define MPS_RNDUNUU RNDQ(GMP_RNDU,GMP_RNDN,GMP_RNDU,GMP_RNDU)
#define MPS_RNDUNUD RNDQ(GMP_RNDU,GMP_RNDN,GMP_RNDU,GMP_RNDD)

#define MPS_RNDUNDN RNDQ(GMP_RNDU,GMP_RNDN,GMP_RNDD,GMP_RNDN)
#define MPS_RNDUNDZ RNDQ(GMP_RNDU,GMP_RNDN,GMP_RNDD,GMP_RNDZ)
#define MPS_RNDUNDU RNDQ(GMP_RNDU,GMP_RNDN,GMP_RNDD,GMP_RNDU)
#define MPS_RNDUNDD RNDQ(GMP_RNDU,GMP_RNDN,GMP_RNDD,GMP_RNDD)

#define MPS_RNDUZNN RNDQ(GMP_RNDU,GMP_RNDZ,GMP_RNDN,GMP_RNDN)
#define MPS_RNDUZNZ RNDQ(GMP_RNDU,GMP_RNDZ,GMP_RNDN,GMP_RNDZ)
#define MPS_RNDUZNU RNDQ(GMP_RNDU,GMP_RNDZ,GMP_RNDN,GMP_RNDU)
#define MPS_RNDUZND RNDQ(GMP_RNDU,GMP_RNDZ,GMP_RNDN,GMP_RNDD)

#define MPS_RNDUZZN RNDQ(GMP_RNDU,GMP_RNDZ,GMP_RNDZ,GMP_RNDN)
#define MPS_RNDUZZZ RNDQ(GMP_RNDU,GMP_RNDZ,GMP_RNDZ,GMP_RNDZ)
#define MPS_RNDUZZU RNDQ(GMP_RNDU,GMP_RNDZ,GMP_RNDZ,GMP_RNDU)
#define MPS_RNDUZZD RNDQ(GMP_RNDU,GMP_RNDZ,GMP_RNDZ,GMP_RNDD)

#define MPS_RNDUZUN RNDQ(GMP_RNDU,GMP_RNDZ,GMP_RNDU,GMP_RNDN)
#define MPS_RNDUZUZ RNDQ(GMP_RNDU,GMP_RNDZ,GMP_RNDU,GMP_RNDZ)
#define MPS_RNDUZUU RNDQ(GMP_RNDU,GMP_RNDZ,GMP_RNDU,GMP_RNDU)
#define MPS_RNDUZUD RNDQ(GMP_RNDU,GMP_RNDZ,GMP_RNDU,GMP_RNDD)

#define MPS_RNDUZDN RNDQ(GMP_RNDU,GMP_RNDZ,GMP_RNDD,GMP_RNDN)
#define MPS_RNDUZDZ RNDQ(GMP_RNDU,GMP_RNDZ,GMP_RNDD,GMP_RNDZ)
#define MPS_RNDUZDU RNDQ(GMP_RNDU,GMP_RNDZ,GMP_RNDD,GMP_RNDU)
#define MPS_RNDUZDD RNDQ(GMP_RNDU,GMP_RNDZ,GMP_RNDD,GMP_RNDD)

#define MPS_RNDUUNN RNDQ(GMP_RNDU,GMP_RNDU,GMP_RNDN,GMP_RNDN)
#define MPS_RNDUUNZ RNDQ(GMP_RNDU,GMP_RNDU,GMP_RNDN,GMP_RNDZ)
#define MPS_RNDUUNU RNDQ(GMP_RNDU,GMP_RNDU,GMP_RNDN,GMP_RNDU)
#define MPS_RNDUUND RNDQ(GMP_RNDU,GMP_RNDU,GMP_RNDN,GMP_RNDD)

#define MPS_RNDUUZN RNDQ(GMP_RNDU,GMP_RNDU,GMP_RNDZ,GMP_RNDN)
#define MPS_RNDUUZZ RNDQ(GMP_RNDU,GMP_RNDU,GMP_RNDZ,GMP_RNDZ)
#define MPS_RNDUUZU RNDQ(GMP_RNDU,GMP_RNDU,GMP_RNDZ,GMP_RNDU)
#define MPS_RNDUUZD RNDQ(GMP_RNDU,GMP_RNDU,GMP_RNDZ,GMP_RNDD)

#define MPS_RNDUUUN RNDQ(GMP_RNDU,GMP_RNDU,GMP_RNDU,GMP_RNDN)
#define MPS_RNDUUUZ RNDQ(GMP_RNDU,GMP_RNDU,GMP_RNDU,GMP_RNDZ)
#define MPS_RNDUUUU RNDQ(GMP_RNDU,GMP_RNDU,GMP_RNDU,GMP_RNDU)
#define MPS_RNDUUUD RNDQ(GMP_RNDU,GMP_RNDU,GMP_RNDU,GMP_RNDD)

#define MPS_RNDUUDN RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDD,GMP_RNDN)
#define MPS_RNDUUDZ RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDD,GMP_RNDZ)
#define MPS_RNDUUDU RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDD,GMP_RNDU)
#define MPS_RNDUUDD RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDD,GMP_RNDD)

#define MPS_RNDUDNN RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDN,GMP_RNDN)
#define MPS_RNDUDNZ RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDN,GMP_RNDZ)
#define MPS_RNDUDNU RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDN,GMP_RNDU)
#define MPS_RNDUDND RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDN,GMP_RNDD)

#define MPS_RNDUDZN RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDZ,GMP_RNDN)
#define MPS_RNDUDZZ RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDZ,GMP_RNDZ)
#define MPS_RNDUDZU RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDZ,GMP_RNDU)
#define MPS_RNDUDZD RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDZ,GMP_RNDD)

#define MPS_RNDUDUN RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDU,GMP_RNDN)
#define MPS_RNDUDUZ RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDU,GMP_RNDZ)
#define MPS_RNDUDUU RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDU,GMP_RNDU)
#define MPS_RNDUDUD RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDU,GMP_RNDD)

#define MPS_RNDUDDN RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDD,GMP_RNDN)
#define MPS_RNDUDDZ RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDD,GMP_RNDZ)
#define MPS_RNDUDDU RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDD,GMP_RNDU)
#define MPS_RNDUDDD RNDQ(GMP_RNDU,GMP_RNDD,GMP_RNDD,GMP_RNDD)

#define MPS_RNDDNNN RNDQ(GMP_RNDD,GMP_RNDN,GMP_RNDN,GMP_RNDN)
#define MPS_RNDDNNZ RNDQ(GMP_RNDD,GMP_RNDN,GMP_RNDN,GMP_RNDZ)
#define MPS_RNDDNNU RNDQ(GMP_RNDD,GMP_RNDN,GMP_RNDN,GMP_RNDU)
#define MPS_RNDDNND RNDQ(GMP_RNDD,GMP_RNDN,GMP_RNDN,GMP_RNDD)

#define MPS_RNDDNZN RNDQ(GMP_RNDD,GMP_RNDN,GMP_RNDZ,GMP_RNDN)
#define MPS_RNDDNZZ RNDQ(GMP_RNDD,GMP_RNDN,GMP_RNDZ,GMP_RNDZ)
#define MPS_RNDDNZU RNDQ(GMP_RNDD,GMP_RNDN,GMP_RNDZ,GMP_RNDU)
#define MPS_RNDDNZD RNDQ(GMP_RNDD,GMP_RNDN,GMP_RNDZ,GMP_RNDD)

#define MPS_RNDDNUN RNDQ(GMP_RNDD,GMP_RNDN,GMP_RNDU,GMP_RNDN)
#define MPS_RNDDNUZ RNDQ(GMP_RNDD,GMP_RNDN,GMP_RNDU,GMP_RNDZ)
#define MPS_RNDDNUU RNDQ(GMP_RNDD,GMP_RNDN,GMP_RNDU,GMP_RNDU)
#define MPS_RNDDNUD RNDQ(GMP_RNDD,GMP_RNDN,GMP_RNDU,GMP_RNDD)

#define MPS_RNDDNDN RNDQ(GMP_RNDD,GMP_RNDN,GMP_RNDD,GMP_RNDN)
#define MPS_RNDDNDZ RNDQ(GMP_RNDD,GMP_RNDN,GMP_RNDD,GMP_RNDZ)
#define MPS_RNDDNDU RNDQ(GMP_RNDD,GMP_RNDN,GMP_RNDD,GMP_RNDU)
#define MPS_RNDDNDD RNDQ(GMP_RNDD,GMP_RNDN,GMP_RNDD,GMP_RNDD)

#define MPS_RNDDZNN RNDQ(GMP_RNDD,GMP_RNDZ,GMP_RNDN,GMP_RNDN)
#define MPS_RNDDZNZ RNDQ(GMP_RNDD,GMP_RNDZ,GMP_RNDN,GMP_RNDZ)
#define MPS_RNDDZNU RNDQ(GMP_RNDD,GMP_RNDZ,GMP_RNDN,GMP_RNDU)
#define MPS_RNDDZND RNDQ(GMP_RNDD,GMP_RNDZ,GMP_RNDN,GMP_RNDD)

#define MPS_RNDDZZN RNDQ(GMP_RNDD,GMP_RNDZ,GMP_RNDZ,GMP_RNDN)
#define MPS_RNDDZZZ RNDQ(GMP_RNDD,GMP_RNDZ,GMP_RNDZ,GMP_RNDZ)
#define MPS_RNDDZZU RNDQ(GMP_RNDD,GMP_RNDZ,GMP_RNDZ,GMP_RNDU)
#define MPS_RNDDZZD RNDQ(GMP_RNDD,GMP_RNDZ,GMP_RNDZ,GMP_RNDD)

#define MPS_RNDDZUN RNDQ(GMP_RNDD,GMP_RNDZ,GMP_RNDU,GMP_RNDN)
#define MPS_RNDDZUZ RNDQ(GMP_RNDD,GMP_RNDZ,GMP_RNDU,GMP_RNDZ)
#define MPS_RNDDZUU RNDQ(GMP_RNDD,GMP_RNDZ,GMP_RNDU,GMP_RNDU)
#define MPS_RNDDZUD RNDQ(GMP_RNDD,GMP_RNDZ,GMP_RNDU,GMP_RNDD)

#define MPS_RNDDZDN RNDQ(GMP_RNDD,GMP_RNDZ,GMP_RNDD,GMP_RNDN)
#define MPS_RNDDZDZ RNDQ(GMP_RNDD,GMP_RNDZ,GMP_RNDD,GMP_RNDZ)
#define MPS_RNDDZDU RNDQ(GMP_RNDD,GMP_RNDZ,GMP_RNDD,GMP_RNDU)
#define MPS_RNDDZDD RNDQ(GMP_RNDD,GMP_RNDZ,GMP_RNDD,GMP_RNDD)

#define MPS_RNDDUNN RNDQ(GMP_RNDD,GMP_RNDU,GMP_RNDN,GMP_RNDN)
#define MPS_RNDDUNZ RNDQ(GMP_RNDD,GMP_RNDU,GMP_RNDN,GMP_RNDZ)
#define MPS_RNDDUNU RNDQ(GMP_RNDD,GMP_RNDU,GMP_RNDN,GMP_RNDU)
#define MPS_RNDDUND RNDQ(GMP_RNDD,GMP_RNDU,GMP_RNDN,GMP_RNDD)

#define MPS_RNDDUZN RNDQ(GMP_RNDD,GMP_RNDU,GMP_RNDZ,GMP_RNDN)
#define MPS_RNDDUZZ RNDQ(GMP_RNDD,GMP_RNDU,GMP_RNDZ,GMP_RNDZ)
#define MPS_RNDDUZU RNDQ(GMP_RNDD,GMP_RNDU,GMP_RNDZ,GMP_RNDU)
#define MPS_RNDDUZD RNDQ(GMP_RNDD,GMP_RNDU,GMP_RNDZ,GMP_RNDD)

#define MPS_RNDDUUN RNDQ(GMP_RNDD,GMP_RNDU,GMP_RNDU,GMP_RNDN)
#define MPS_RNDDUUZ RNDQ(GMP_RNDD,GMP_RNDU,GMP_RNDU,GMP_RNDZ)
#define MPS_RNDDUUU RNDQ(GMP_RNDD,GMP_RNDU,GMP_RNDU,GMP_RNDU)
#define MPS_RNDDUUD RNDQ(GMP_RNDD,GMP_RNDU,GMP_RNDU,GMP_RNDD)

#define MPS_RNDDUDN RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDD,GMP_RNDN)
#define MPS_RNDDUDZ RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDD,GMP_RNDZ)
#define MPS_RNDDUDU RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDD,GMP_RNDU)
#define MPS_RNDDUDD RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDD,GMP_RNDD)

#define MPS_RNDDDNN RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDN,GMP_RNDN)
#define MPS_RNDDDNZ RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDN,GMP_RNDZ)
#define MPS_RNDDDNU RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDN,GMP_RNDU)
#define MPS_RNDDDND RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDN,GMP_RNDD)

#define MPS_RNDDDZN RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDZ,GMP_RNDN)
#define MPS_RNDDDZZ RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDZ,GMP_RNDZ)
#define MPS_RNDDDZU RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDZ,GMP_RNDU)
#define MPS_RNDDDZD RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDZ,GMP_RNDD)

#define MPS_RNDDDUN RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDU,GMP_RNDN)
#define MPS_RNDDDUZ RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDU,GMP_RNDZ)
#define MPS_RNDDDUU RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDU,GMP_RNDU)
#define MPS_RNDDDUD RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDU,GMP_RNDD)

#define MPS_RNDDDDN RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDD,GMP_RNDN)
#define MPS_RNDDDDZ RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDD,GMP_RNDZ)
#define MPS_RNDDDDU RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDD,GMP_RNDU)
#define MPS_RNDDDDD RNDQ(GMP_RNDD,GMP_RNDD,GMP_RNDD,GMP_RNDD)

void mps_quater_init(mps_quater,mpfr_prec_t);
void mps_quater_clear(mps_quater);
void mps_quater_set(mps_quater,mps_quater,mps_rndq_t);
void mps_quater_add(mps_quater,mps_quater,mps_quater,mps_rndq_t);
void mps_s_q_mul(mps_quater,mpfr_t,mps_quater,mps_rndq_t);
void mps_s_q_div(mps_quater,mpfr_t,mps_quater,mps_rndq_t);
void mps_quater_conj(mps_quater,mps_quater,mps_rndq_t);
void mps_quater_rec(mps_quater,mps_quater,mps_rndq_t);
void mps_q_q_mul(mps_quater,mps_quater,mps_quater,mps_rndq_t);
void mps_quater_norm(mpfr_t,mps_quater,mpfr_rnd_t);
void mps_quater_sub(mps_quater,mps_quater,mps_quater,mps_rndq_t)

void mps_quater_init(mps_quater a, mpfr_prec_t p)
{
	mpfr_init2(a->re,p);
	mpfr_init2(a->i,p);
	mpfr_init2(a->j,p);
	mpfr_init2(a->k,p);
}

void mps_quater_clear(mps_quater a)
{
	mpfr_clear(a->re);
	mpfr_clear(a->i);
	mpfr_clear(a->j);
	mpfr_clear(a->k);
}

//Set one quaternion to the other.

void mps_quater_set(mps_quater a, mps_quater b, mps_rndq_t rnd)
{
	mpfr_set(a->re, b->re, MPS_RNDQ_RE(rnd));
	mpfr_set(a->i, b->i, MPS_RNDQ_I(rnd));
	mpfr_set(a->j, b->j, MPS_RNDQ_J(rnd));
	mpfr_set(a->k, b->k, MPS_RNDQ_K(rnd));
}

//Adds two quaternions. Very straight-forward.

void mps_quater_add(mps_quater a, mps_quater b, mps_quater c, mps_rndq_t rnd)
{
	mpfr_add(c->re, b->re, a->re, MPS_RNDQ_RE(rnd));
	mpfr_add(c->i, b->i, a->i, MPS_RNDQ_I(rnd));
	mpfr_add(c->j, b->j, a->j, MPS_RNDQ_J(rnd));
	mpfr_add(c->k, b->k, a->k, MPS_RNDQ_K(rnd));
}

//Scalar-Quaternion multiplication, or scaling a vector.

void mps_s_q_mul(mps_quater a, mpfr_t b, mps_quater c, mps_rndq_t rnd)
{
	mpfr_mul(c->re, b, a->re, MPS_RNDQ_RE(rnd));
	mpfr_mul(c->i, b, a->i, MPS_RNDQ_I(rnd));
	mpfr_mul(c->j, b, a->j, MPS_RNDQ_J(rnd));
	mpfr_mul(c->k, b, a->k, MPS_RNDQ_K(rnd));
}

void mps_s_q_div(mps_quater a, mpfr_t b, mps_quater c, mps_rndq_t rnd)
{
	mpfr_d_div(b, 1.0, b, MPS_RNDQ_RE(rnd));
	mps_s_q_mul(a, b, c, rnd);
}

//Conjugates a quaternion. Simple, right?

void mps_quater_conj(mps_quater a, mps_quater b, mps_rndq_t rnd)
{
	mpfr_set(b->re, a->re, MPS_RNDQ_RE(rnd))
	mpfr_neg(b->i, a->i, MPS_RNDQ_I(rnd));
	mpfr_neg(b->j, a->j, MPS_RNDQ_J(rnd));
	mpfr_neg(b->k, a->k, MPS_RNDQ_K(rnd));
}

void mps_quater_rec(mps_quater a, mps_quater b, mps_rndq_t rnd)
{
	mpfr_t p;
	mpfr_init2(p, mpfr_get_prec(a->re));

	mps_quater_norm(p, b, MPS_RNDQ_RE(rnd));
	mpfr_d_div(p, 1.0, p, MPS_RNDQ_RE(rnd));
	mpfr_sqr(p, p, MPS_RNDQ_RE(rnd));
	mps_quater_conj(b, a, rnd);
	mps_s_q_mul(a, p, a, rnd);
	
	mpfr_clear(p);
}

//Quaternion-Quaternion multiplication. VERY complicated.

void mps_q_q_mul(mps_quater a, mps_quater b, mps_quater c, mps_rndq_t rnd)
{
	mpfr_t p;
	mpfr_init2(p, mpfr_get_prec(a->re));

	mpfr_mul(c->re, a->re, b->re, MPS_RNDQ_RE(rnd));
	mpfr_mul(p, a->i, b->i, MPS_RNDQ_RE(rnd))
	mpfr_sub(c->re, c->re, p, MPS_RNDQ_RE(rnd));
	mpfr_mul(p, a->j, b->j, MPS_RNDQ_RE(rnd))
	mpfr_sub(c->re, c->re, p, MPS_RNDQ_RE(rnd));
	mpfr_mul(p, a->k, b->k, MPS_RNDQ_RE(rnd))
	mpfr_sub(c->re, c->re, p, MPS_RNDQ_RE(rnd));

	mpfr_mul(c->i, a->re, b->i, MPS_RNDQ_I(rnd));
	mpfr_mul(p, a->i, b->re, MPS_RNDQ_I(rnd))
	mpfr_add(c->i, p, c->i, MPS_RNDQ_I(rnd));
	mpfr_mul(p, a->j, b->k, MPS_RNDQ_I(rnd))
	mpfr_add(c->i, p, c->i, MPS_RNDQ_I(rnd));
	mpfr_mul(p, a->k, b->j, MPS_RNDQ_I(rnd))
	mpfr_sub(c->i, c->i, p, MPS_RNDQ_I(rnd));

	mpfr_mul(c->j, a->re, b->i, MPS_RNDQ_J(rnd));
	mpfr_mul(p, a->i, b->re, MPS_RNDQ_J(rnd))
	mpfr_sub(c->j, c->j, p, MPS_RNDQ_J(rnd));
	mpfr_mul(p, a->j, b->k, MPS_RNDQ_J(rnd))
	mpfr_add(c->j, p, c->j, MPS_RNDQ_J(rnd));
	mpfr_mul(p, a->k, b->j, MPS_RNDQ_J(rnd))
	mpfr_add(c->j, p, c->j, MPS_RNDQ_J(rnd));

	mpfr_mul(c->k, a->re, b->k, MPS_RNDQ_K(rnd));
	mpfr_mul(p, a->i, b->j, MPS_RNDQ_K(rnd))
	mpfr_add(c->k, p, c->k, MPS_RNDQ_K(rnd));
	mpfr_mul(p, a->j, b->k, MPS_RNDQ_K(rnd))
	mpfr_sub(c->k, c->k, p, MPS_RNDQ_K(rnd));
	mpfr_mul(p, a->k, b->re, MPS_RNDQ_K(rnd))
	mpfr_add(c->k, p, c->k, MPS_RNDQ_K(rnd));

	mpfr_clear(p);

}

//Computes the norm.

void mps_quater_norm(mpfr_t c, mps_quater a, mpfr_rnd_t rnd)
{
	mpfr_t p;
	mpfr_set_d(p, mpfr_get_prec(a->re));

	mpfr_sqr(c, a->re, rnd);
	mpfr_sqr(p, a->i, rnd);
	mpfr_add(c, p, c, rnd);
	mpfr_sqr(p, a->j, rnd);
	mpfr_add(c, p, c, rnd);
	mpfr_sqr(p, a->k, rnd);
	mpfr_add(c, p, c, rnd);
	mpfr_sqrt(c, c, rnd);

	mpfr_clear(p);
}

//Identical to addition, except different function names.

void mps_quater_sub(mps_quater a, mps_quater b, mps_quater c, mps_rndq_t rnd)
{
	mpfr_sub(c->re, a->re, b->re, MPS_RNDQ_RE(rnd));
	mpfr_sub(c->i, a->i, b->i, MPS_RNDQ_I(rnd));
	mpfr_sub(c->j, a->j, b->j, MPS_RNDQ_J(rnd));
	mpfr_sub(c->k, a->k, b->k, MPS_RNDQ_K(rnd));
}

#endif //MPS header guard
